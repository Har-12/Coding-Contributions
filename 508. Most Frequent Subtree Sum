class Solution {
    public HashMap<Integer,Integer> hm=new HashMap<>();
    public int[] findFrequentTreeSum(TreeNode root) {
       int max=0;
        
       helper(root);
       for(int i:hm.keySet()){
           max=Math.max(max,hm.get(i));
       }
       List<Integer> ls=new ArrayList<>();
        for(int i:hm.keySet()){
           if(hm.get(i)==max)
               ls.add(i);
       }
        int[] a=new int[ls.size()];
        for(int i=0;i<a.length;i++)
            a[i]=ls.get(i);
        
        return a;
        
    }
    public int helper(TreeNode root){
        if(root==null){
            return 0;
        }
        int val=helper(root.left)+helper(root.right)+root.val;
        hm.put(val,hm.getOrDefault(val,0)+1);
        return val; 
    }
}
